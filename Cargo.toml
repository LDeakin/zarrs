[package]
name = "zarrs"
description = "A library for the Zarr V3 storage format for multidimensional arrays and metadata"
version = "0.6.0"
authors = ["Lachlan Deakin <ljdgit@gmail.com>"]
edition = "2021"
license = "MIT OR Apache-2.0"
repository = "https://github.com/LDeakin/zarrs"
keywords = ["zarr"]
categories = ["encoding"]
exclude = [".dockerignore", ".github", ".editorconfig", "Dockerfile", "coverage.sh", "TODO.md"]

[features]
default = ["transpose", "blosc", "gzip", "sharding", "crc32c", "zstd", "http", "zip", "ndarray"]
# Codecs
bitround = []
blosc = ["dep:blosc-sys"]
crc32c = ["dep:crc32fast"]
gzip = ["dep:flate2"]
sharding = []
transpose = ["dep:ndarray"]
zfp = ["dep:zfp-sys"]
zstd = ["dep:zstd"]
# Stores
http = ["dep:reqwest", "dep:url"]
zip = ["dep:zip"]
# Utilities
ndarray = ["dep:ndarray"] # Adds ndarray utility functions to Array

[package.metadata.docs.rs]
all-features = true

[lib]
crate-type = ["lib"]
bench = false

[dependencies]
blosc-sys = { version = "0.2.1", package = "blosc-src", features = ["lz4", "zlib", "zstd"], optional = true }
crc32fast = { version = "1.3", optional = true }
derive_more = "0.99"
dyn-clone = "1"
flate2 = { version = "1", optional = true }
half = "2"
inventory = "0.3"
itertools = "0.11"
ndarray = { version = "0.15", optional = true }
num = { version = "0.4" }
parking_lot = "0.12"
pathdiff = "0.2"
rayon = "1.6"
reqwest = { version = "0.11", features = ["blocking"], optional = true }
safe-transmute = "0.11"
serde = { version = "1.0.100", features = ["derive"] }
serde_json = { version = "1.0.71", features = ["preserve_order"] }
thiserror = "1.0.7"
url = { version = "2", optional = true }
walkdir = "2.3.2"
zfp-sys = {version = "0.1.4", features = ["static"], optional = true }
zip = { version = "0.6", optional = true }
zstd = { version = "0.12", optional = true }

[dev-dependencies]
chrono = "0.4"
criterion = "0.5.1"
tempfile = "3"

[[bench]]
name = "array_uncompressed"
harness = false

[[bench]]
name = "codecs"
harness = false

[[bench]]
name = "fill_value"
harness = false
